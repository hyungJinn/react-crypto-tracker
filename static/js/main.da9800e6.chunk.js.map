{"version":3,"sources":["api.ts","routes/Coins.tsx","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","Router.tsx","App.tsx","index.tsx","theme.ts"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","fetchCoinHistory","coinId","endDate","Math","floor","Date","now","startDate","Container","styled","div","Header","header","CoinsList","ul","Coin","li","props","theme","bgColor","accentColor","Title","h1","Loader","span","Img","img","Coins","useQuery","isLoading","data","Helmet","slice","map","coin","to","pathname","id","state","name","src","symbol","toLowerCase","Chart","refetchInterval","type","series","price","close","options","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","lineCap","colors","undefined","dashArray","yaxis","xaxis","axisBorder","axisTicks","labels","categories","time_close","fill","gradient","gradientToColors","stops","tooltip","y","formatter","value","toFixed","Price","Overview","OverviewItem","Description","p","Tabs","repeatNum","Tab","isActive","textColor","useParams","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","loading","rank","quotes","USD","description","total_supply","max_supply","path","Router","basename","process","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.da9800e6.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\r\n\r\nexport function fetchCoins() {\r\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\r\n}\r\n\r\nexport function fetchCoinInfo(coinId: string) {\r\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinTickers(coinId: string) {\r\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinHistory(coinId: string) {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2; // 60초 * 60분 * 24시간 * 7일 * 2(2주)\r\n  return fetch(\r\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n  ).then((response) => response.json());\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoins } from \"../api\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst CoinsList = styled.ul``;\r\n\r\nconst Coin = styled.li`\r\n  background-color: white;\r\n  color: ${(props) => props.theme.bgColor};\r\n  border-radius: 15px;\r\n  margin-bottom: 10px;\r\n  a {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 20px;\r\n    transition: color 0.2s ease-in;\r\n  }\r\n  &:hover {\r\n    a {\r\n      color: ${(props) => props.theme.accentColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 35px;\r\n  height: 35px;\r\n  margin-right: 10px;\r\n`;\r\n\r\ninterface ICoin {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n}\r\n\r\nfunction Coins() {\r\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\r\n  // const [coins, setCoins] = useState<CoinInterface[]>([]);\r\n  // const [loading, setLoading] = useState(true);\r\n  // useEffect(() => {\r\n  //   (async () => {\r\n  //     const response = await fetch(\"https://api.coinpaprika.com/v1/coins\");\r\n  //     const json = await response.json();\r\n  //     setCoins(json.slice(0, 100));\r\n  //     setLoading(false);\r\n  //   })();\r\n  // }, []);\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>코인</title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>코인</Title>\r\n      </Header>\r\n      {isLoading ? (\r\n        <Loader>\"Loading...\"</Loader>\r\n      ) : (\r\n        <CoinsList>\r\n          {data?.slice(0, 100).map((coin) => (\r\n            <Coin key={coin.id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `/${coin.id}`,\r\n                  state: { name: coin.name },\r\n                }}\r\n              >\r\n                <Img\r\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n                />\r\n                {coin.name} &rarr;\r\n              </Link>\r\n            </Coin>\r\n          ))}\r\n        </CoinsList>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\nexport default Coins;\r\n","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\n\r\ninterface IHistorical {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\n\r\ninterface PriceProps {\r\n  coinId: string;\r\n}\r\n\r\nfunction Chart({ coinId }: PriceProps) {\r\n  const { isLoading, data } = useQuery<IHistorical[]>(\r\n    [\"ohlcv\", coinId],\r\n    () => fetchCoinHistory(coinId),\r\n    {\r\n      refetchInterval: 10000,\r\n    }\r\n  );\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading price...\"\r\n      ) : (\r\n        <ApexChart\r\n          type=\"line\"\r\n          series={[{ name: \"sales\", data: data?.map((price) => price.close) }]}\r\n          options={{\r\n            theme: { mode: \"dark\" },\r\n            chart: {\r\n              height: 500,\r\n              width: 500,\r\n              toolbar: { show: false },\r\n              background: \"transparent\",\r\n            },\r\n            grid: { show: false },\r\n            stroke: {\r\n              show: true,\r\n              curve: \"smooth\",\r\n              lineCap: \"butt\",\r\n              colors: undefined,\r\n              width: 2,\r\n              dashArray: 0,\r\n            },\r\n            yaxis: {\r\n              show: false,\r\n            },\r\n            xaxis: {\r\n              axisBorder: { show: false },\r\n              axisTicks: { show: false },\r\n              labels: { show: false },\r\n              type: \"datetime\",\r\n              categories: data?.map((price) => price.time_close),\r\n            },\r\n            fill: {\r\n              type: \"gradient\",\r\n              gradient: { gradientToColors: [\"#00a8ff\"], stops: [0, 100] },\r\n            },\r\n            colors: [\"#e84118\"],\r\n            tooltip: {\r\n              y: { formatter: (value) => `${value.toFixed(2)}` },\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\n\r\ninterface IHistorical {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\n\r\ninterface PriceProps {\r\n  coinId: string;\r\n}\r\n\r\nfunction Price({ coinId }: PriceProps) {\r\n  const { isLoading, data } = useQuery<IHistorical[]>(\r\n    [\"ohlcv\", coinId],\r\n    () => fetchCoinHistory(coinId),\r\n    {\r\n      refetchInterval: 10000,\r\n    }\r\n  );\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading price...\"\r\n      ) : (\r\n        <ApexChart\r\n          type=\"line\"\r\n          series={[{ name: \"sales\", data: data?.map((price) => price.close) }]}\r\n          options={{\r\n            theme: { mode: \"dark\" },\r\n            chart: {\r\n              height: 500,\r\n              width: 500,\r\n              toolbar: { show: false },\r\n              background: \"transparent\",\r\n            },\r\n            grid: { show: false },\r\n            stroke: {\r\n              show: true,\r\n              curve: \"smooth\",\r\n              lineCap: \"butt\",\r\n              colors: undefined,\r\n              width: 2,\r\n              dashArray: 0,\r\n            },\r\n            yaxis: {\r\n              show: false,\r\n            },\r\n            xaxis: {\r\n              axisBorder: { show: false },\r\n              axisTicks: { show: false },\r\n              labels: { show: false },\r\n              type: \"datetime\",\r\n              categories: data?.map((price) => price.time_close),\r\n            },\r\n            fill: {\r\n              type: \"gradient\",\r\n              gradient: { gradientToColors: [\"#00a8ff\"], stops: [0, 100] },\r\n            },\r\n            colors: [\"#e84118\"],\r\n            tooltip: {\r\n              y: { formatter: (value) => `${value.toFixed(2)}` },\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Price;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useLocation,\r\n  useParams,\r\n  useRouteMatch,\r\n} from \"react-router\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\r\nimport Chart from \"./Chart\";\r\nimport Price from \"./Price\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 33%\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\n\r\nconst Description = styled.p`\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst Tabs = styled.div<{ repeatNum: number }>`\r\n  display: grid;\r\n  grid-template-columns: repeat(${(props) => props.repeatNum}, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Tab = styled.span<{ isActive?: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  color: ${(props) =>\r\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\ninterface RouteParams {\r\n  coinId: string;\r\n}\r\n\r\ninterface RouteStaet {\r\n  name: string;\r\n}\r\n\r\ninterface InfoData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  contract: string;\r\n  platform: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\n\r\ninterface PriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: string;\r\n  circulating_supply: string;\r\n  total_supply: string;\r\n  max_supply: string;\r\n  beta_value: string;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\nfunction Coin() {\r\n  const { coinId } = useParams<RouteParams>();\r\n  const { state } = useLocation<RouteStaet>();\r\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\r\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\r\n    [\"info\", coinId],\r\n    () => fetchCoinInfo(coinId)\r\n  );\r\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\r\n    [\"tickers\", coinId],\r\n    //시간이 지나면 react query는 이 함수를 가져다가 이걸 다시 호출한다.\r\n    () => fetchCoinTickers(coinId),\r\n    {\r\n      refetchInterval: 5000,\r\n    }\r\n  );\r\n  const loading = infoLoading || tickersLoading;\r\n  // const [loading, setLoading] = useState(true);\r\n  // const [info, setInfo] = useState<InfoData>();\r\n  // const [priceInfo, setPriceInfo] = useState<PriceData>();\r\n  // useEffect(() => {\r\n  //   (async () => {\r\n  //     const infoData = await (\r\n  //       await fetch(`https://api.coinpaprika.com/v1/coins/${coinId}`)\r\n  //     ).json();\r\n  //     const priceData = await (\r\n  //       await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)\r\n  //     ).json();\r\n  //     setInfo(infoData);\r\n  //     setPriceInfo(priceData);\r\n  //     setLoading(false);\r\n  //   })();\r\n  // }, [coinId]);\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </Title>\r\n      </Header>\r\n      <Tabs repeatNum={1}>\r\n        <Tab>\r\n          <Link to={`/`}>Back</Link>\r\n        </Tab>\r\n      </Tabs>\r\n      {loading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>${infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Price:</span>\r\n              <span>${tickersData?.quotes.USD.price.toFixed(3)}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Suply:</span>\r\n              <span>{tickersData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{tickersData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n\r\n          <Tabs repeatNum={2}>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to={`/${coinId}/chart`}>Chart</Link>\r\n            </Tab>\r\n            <Tab isActive={priceMatch !== null}>\r\n              <Link to={`/${coinId}/price`}>Price</Link>\r\n            </Tab>\r\n          </Tabs>\r\n\r\n          <Switch>\r\n            <Route path={`/${coinId}/price`}>\r\n              <Price coinId={coinId} />\r\n            </Route>\r\n            <Route path={`/${coinId}/chart`}>\r\n              <Chart coinId={coinId} />\r\n            </Route>\r\n          </Switch>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\nexport default Coin;\r\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Coins from \"./routes/Coins\";\r\nimport Coin from \"./routes/Coin\";\r\n\r\nfunction Router() {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route path=\"/:coinId\">\r\n          <Coin />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Coins />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","import React, { useState } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Router />\n      <ReactQueryDevtools initialIsOpen={true} />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { theme } from \"./theme\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const theme: DefaultTheme = {\r\n  bgColor: \"#2f3640\",\r\n  textColor: \"#f5f6fa\",\r\n  accentColor: \"#00a8ff\",\r\n};\r\n"],"sourceRoot":""}